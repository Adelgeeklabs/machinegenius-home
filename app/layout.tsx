"use client";
import { useEffect, useState } from "react";
// import type { Metadata } from "next"; // Importing Metadata type from Next.js
// import { Inter } from "next/font/google"; // Importing Inter font from Google Fonts
import "./globals.css"; // Importing global styles
import GlobalContextProvider from "./_context/store";
import { Provider } from "react-redux";
import { store } from "./_redux/store";
import { SocketProvider } from "./_context/SocketProvider";
import { Toaster } from "react-hot-toast";
// import dynamic from "next/dynamic";
import { JobCurrentStepContextProvider } from "./_context/jobCurrentStep";
// import { usePathname } from "next/navigation";
import { loadPolyfills } from "@/app/_utils/polyfills";
import dynamic from "next/dynamic";
const WrapNotifications = dynamic(
  () => import("@/app/_components/wrapNotifications/WrapNotifications"),
  {
    ssr: false,
  }
);
// Initializing Inter font with Latin subset
// const inter = Inter({ subsets: ["latin"] });

// Metadata for the page
// export const metadata: Metadata = {
//   title: "Machine Genius",
//   description: "Generated by create next app",
// };

// Root layout component
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  function getOnlineStatus() {
    return typeof navigator !== "undefined" &&
      typeof navigator.onLine === "boolean"
      ? navigator.onLine
      : true;
  }

  const [onlineStatus, setOnlineStatus] = useState(getOnlineStatus);

  useEffect(() => {
    const goOnline = () => setOnlineStatus(true);
    const goOffline = () => setOnlineStatus(false);

    window.addEventListener("online", goOnline);
    window.addEventListener("offline", goOffline);

    return () => {
      window.removeEventListener("online", goOnline);
      window.removeEventListener("offline", goOffline);
    };
  }, []);

  useEffect(() => {
    loadPolyfills()
      .then(() => {
        console.log("Polyfills loaded");
      })
      .catch((error) => {
        console.error("Error loading polyfills:", error);
      });
  }, []);

  // const path = usePathname();
  return (
    <html lang="en">
      <head>
        {/* <!-- Preload Acumin Pro Bold Italic --> */}
        <link
          rel="preload"
          href="/fonts/Acumin-BdItPro.woff"
          as="font"
          crossOrigin="anonymous"
        />

        {/* <!-- Preload Hellix Black --> */}
        <link
          rel="preload"
          href="/fonts/Hellix-Black.woff2"
          as="font"
          crossOrigin="anonymous"
        />
      </head>
      <body>
        <Provider store={store}>
          <GlobalContextProvider>
            <JobCurrentStepContextProvider>
              <SocketProvider>
                <WrapNotifications />
                <div className="main_wrapper overflow-hidden bg-[--dark]">
                  <div className="w-full h-100vh p-0 overflow-hidden">
                    {children}
                  </div>
                </div>
              </SocketProvider>
            </JobCurrentStepContextProvider>
          </GlobalContextProvider>
        </Provider>
        <Toaster
          position="top-center"
          containerStyle={{
            zIndex: 50001,
          }}
        />
        <script
          src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/5.3.0/fabric.min.js"
          defer
        ></script>
        {!onlineStatus && (
          <div className="offlineMsg">
            Oops! It seems like you&apos;re currently offline
          </div>
        )}
      </body>
    </html>
  );
}
